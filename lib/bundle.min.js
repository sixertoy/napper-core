"use strict";Object.defineProperty(exports,"__esModule",{value:true});const isString=str=>Boolean(str&&typeof str==="string");const isEmpty=val=>{const isBoolean=typeof val==="boolean";const isFunction=typeof val==="function";if(isFunction||isBoolean)return false;if(!val)return true;if(typeof val==="string"&&val.trim()==="")return true;if(Array.isArray(val)&&val.length<=0)return true;return false};const sleep=ms=>new Promise(resolve=>setTimeout(resolve,ms));const parseArray=vals=>vals.reduce((acc,val)=>({...acc,[val]:val}),{});const parseObject=vals=>Object.keys(vals).reduce((acc,val)=>({...acc,[val]:val}),{});const mirrorKeys=(keys,parsers=[])=>{const isarray=Array.isArray(keys);const isobject=keys&&typeof keys==="object";const isvalid=isarray||isobject;if(!isvalid)return keys;const modifiers=parsers.filter(fn=>typeof fn==="function");const parser=isarray?parseArray:parseObject;let result=parser(keys);if(!modifiers||!modifiers.length)return result;result=Object.keys(result).reduce((acc,key)=>{const modifiedValue=modifiers.reduce((prevacc,fn)=>prevacc&&fn(prevacc)||fn(key),undefined);return{...acc,[key]:modifiedValue}},{});return result};const toggleBooleans=(boolVal,shouldToggle=false)=>{if(!shouldToggle)return boolVal;const result=!!(shouldToggle^boolVal);return result};const isEmpty$1=v=>isEmpty(v);const toLowerCase=str=>{if(!isString(str))return str;return str.toUpperCase()};const toLowerCase$1=str=>{if(!isString(str))return str;return str.toLowerCase()};const removeWhitespaces=val=>{if(typeof val!=="string"||!val.length)return val;let value=val.trim();value=value.replace(/&nbsp;/g," ");value=value.replace(/\s+/g,"");return value};const trimValue=val=>(val&&typeof val==="string"&&val||"").trim();const slugify=(text="",pprefix="",psuffix="")=>{const a="àáäâèéëêìíïîòóöôùúüûñçßÿœæŕśńṕẃǵǹḿǘẍźḧ·/_,:;";const b="aaaaeeeeiiiioooouuuuncsyoarsnpwgnmuxzh------";const p=new RegExp(a.split("").join("|"),"g");let prefix=trimValue(pprefix);prefix=prefix&&`${prefix}-`||"";let suffix=trimValue(psuffix);suffix=suffix&&`-${suffix}`||"";const result=text&&text!==""&&text.toString().toLowerCase().replace(/\s+/g,"-").replace(p,c=>b.charAt(a.indexOf(c))).replace(/&/g,"-and-").replace(/[^\w-]+/g,"").replace(/--+/g,"-").replace(/^-+/,"").replace(/-+$/,"");return result&&`${prefix}${result}${suffix}`||""};const ucfirst=str=>str.charAt(0).toUpperCase()+str.slice(1);const COLORS={BLUE:34,CYAN:36,GRAY:90,GREEN:32,MAGENTA:35,RED:31,WHITE:37,YELLOW:33};const getColor=(msg,code)=>`[${code}m${msg}[39m`;const colors={blue:msg=>getColor(msg,COLORS.BLUE),bold:msg=>`[0;1m${msg}[0;0m`,cyan:msg=>getColor(msg,COLORS.CYAN),gray:msg=>getColor(msg,COLORS.GRAY),green:msg=>getColor(msg,COLORS.GREEN),grey:msg=>getColor(msg,COLORS.GRAY),magenta:msg=>getColor(msg,COLORS.MAGENTA),red:msg=>getColor(msg,COLORS.RED),white:msg=>getColor(msg,COLORS.WHITE),yellow:msg=>getColor(msg,COLORS.YELLOW)};const WS=" ";const EOL="\n";function trace(msg,method="stdout"){const useTTY=Boolean(process[method]&&process[method].isTTY);if(useTTY)process[method].write(`${msg}${EOL}`);else console.log(msg)}function buildMessageToTrace(msg,color=false,prefix=false,type=false){const entries=[prefix,type,msg];const prefixedMessage=entries.filter(v=>v).join(WS);if(!color)return prefixedMessage;return colors[color](prefixedMessage)}const Logger={cloneNS:ns=>{const clone=Object.keys(Logger).reduce((acc,key)=>{return{...acc,[key]:msg=>Logger[key](msg,ns)}},{});return{...clone}},colors:colors,debug:(msg,prefix=false)=>{const message=buildMessageToTrace(msg,"gray",prefix);trace(message)},error:(msg,prefix=false)=>{const message=buildMessageToTrace(msg,"red",prefix,"Error:");trace(message,"stderr")},info:(msg,prefix=false)=>{const message=buildMessageToTrace(msg,"magenta",prefix);trace(message)},log:(msg,prefix=false)=>{const message=buildMessageToTrace(msg,"white",prefix);trace(message)},ok:(msg,prefix=false)=>{const message=buildMessageToTrace(msg,"green",prefix);trace(message)},warning:(msg,prefix=false)=>{const message=buildMessageToTrace(msg,"yellow",prefix,"Warning:");trace(message)}};exports.Logger=Logger;exports.isEmpty=isEmpty$1;exports.isString=isString;exports.mirrorKeys=mirrorKeys;exports.removeWhitespaces=removeWhitespaces;exports.sleep=sleep;exports.slugify=slugify;exports.toLowerCase=toLowerCase$1;exports.toUpperCase=toLowerCase;exports.toggleBooleans=toggleBooleans;exports.ucfirst=ucfirst;
