"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const isEmpty=e=>{return!("function"==typeof e)&&!("boolean"==typeof e)&&(!e||("string"==typeof e&&""===e.trim()||!!(Array.isArray(e)&&e.length<=0)))},sleep=e=>new Promise(r=>setTimeout(r,e)),parseArray=e=>e.reduce((e,r)=>({...e,[r]:r}),{}),parseObject=e=>Object.keys(e).reduce((e,r)=>({...e,[r]:r}),{}),mirrorKeys=(e,r=[])=>{const o=Array.isArray(e);if(!(o||e&&"object"==typeof e))return e;const t=r.filter(e=>"function"==typeof e);let s=(o?parseArray:parseObject)(e);return t&&t.length?s=Object.keys(s).reduce((e,r)=>{const o=t.reduce((e,o)=>e&&o(e)||o(r),void 0);return{...e,[r]:o}},{}):s},toggleBooleans=(e,r=!1)=>{if(!r)return e;return!!(r^e)},COLORS={BLUE:34,CYAN:36,GRAY:90,GREEN:32,MAGENTA:35,RED:31,WHITE:37,YELLOW:33},getColor=(e,r)=>`[${r}m${e}[39m`,colors={blue:e=>getColor(e,COLORS.BLUE),bold:e=>`[0;1m${e}[0;0m`,cyan:e=>getColor(e,COLORS.CYAN),gray:e=>getColor(e,COLORS.GRAY),green:e=>getColor(e,COLORS.GREEN),grey:e=>getColor(e,COLORS.GRAY),magenta:e=>getColor(e,COLORS.MAGENTA),red:e=>getColor(e,COLORS.RED),white:e=>getColor(e,COLORS.WHITE),yellow:e=>getColor(e,COLORS.YELLOW)},WS=" ",EOL="\n";function trace(e,r="stdout"){Boolean(process[r]&&process[r].isTTY)?process[r].write(`${e}${EOL}`):console.log(e)}function buildMessageToTrace(e,r=!1,o=!1,t=!1){const s=[o,t,e].filter(e=>e).join(WS);return r?colors[r](s):s}const Logger={cloneNS:e=>{return{...Object.keys(Logger).reduce((r,o)=>({...r,[o]:r=>Logger[o](r,e)}),{})}},colors:colors,debug:(e,r=!1)=>{trace(buildMessageToTrace(e,"gray",r))},error:(e,r=!1)=>{trace(buildMessageToTrace(e,"red",r,"Error:"),"stderr")},info:(e,r=!1)=>{trace(buildMessageToTrace(e,"magenta",r))},log:(e,r=!1)=>{trace(buildMessageToTrace(e,"white",r))},ok:(e,r=!1)=>{trace(buildMessageToTrace(e,"green",r))},warning:(e,r=!1)=>{trace(buildMessageToTrace(e,"yellow",r,"Warning:"))}};exports.Logger=Logger,exports.isEmpty=isEmpty,exports.mirrorKeys=mirrorKeys,exports.sleep=sleep,exports.toggleBooleans=toggleBooleans;
